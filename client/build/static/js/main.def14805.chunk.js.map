{"version":3,"sources":["components/Login/mystyle.module.css","components/Register/mystyle.module.css","utils/Auth.js","utils/UserContext.js","components/AuthButton/index.js","components/Nav/index.js","components/Card/index.js","components/Grid/index.js","components/LoginForm/index.js","components/Login/index.js","utils/roles.js","components/RegisterForm/index.js","components/Register/index.js","pages/HomePage/index.js","utils/API.js","components/Announcement/index.js","components/UserDashBoard/index.js","pages/UserPage/index.js","components/FormSubmitButton/index.js","components/AdminDashBoardForm/index.js","components/AdminDashBoard/index.js","pages/AdminPage/index.js","components/PlannerForm/index.js","components/ClearAllButton/index.js","components/Planner/index.js","components/Calendar/index.js","pages/PlannerPage/index.js","components/TeamMates/index.js","components/PlannerSearch/index.js","pages/PlannerSearchPage/index.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","Auth","isAuthenticated","isAdmin","authenticate","cb","fetch","credentials","then","res","console","log","status","json","data","role","catch","err","signout","method","UserContext","createContext","Provider","reducer","state","action","type","payload","UserProvider","value","props","useReducer","dispatch","AuthButton","useContext","history","useHistory","className","onClick","push","id","to","buttonStyle","marginRight","Nav","user","useState","open","setOpen","window","innerWidth","width","setWidth","updateWidth","useEffect","addEventListener","removeEventListener","username","style","Card","icon","title","children","aria-hidden","Container","fluid","Row","Col","size","split","map","join","LoginForm","onLogin","formRef","useRef","userNameRef","passwordRef","ref","onSubmit","e","preventDefault","current","password","name","placeholder","Login","location","useLocation","redirectToReferrer","setRedirectToReferrer","from","pathname","styles","bigblue","JSON","stringify","body","headers","response","Roles","Admin","User","RegisterForm","onRegister","managerRef","manager","Register","bigpurple","PublicRoute","axios","get","post","Announcements","loadAnnouncements","API","UserDashBoard","announcements","setAnnouncements","items","filterShortAn","filter","shortAnnouncements","filterLongAn","longAnnouncements","length","announcement","i","Announcement","key","ProtectedRoute","FormButton","AdminDashBoardForm","dashFormRef","titleRef","typeRef","bodyRef","for","rows","AdminDashBoard","AdminPage","PlannerForm","loadPlans","update","planFormRef","dayRef","timeRef","planRef","updatedplan","parseInt","splice","sendPlans","ClearAllButton","Planner","plans","setPlan","schedule","scope","plan","Calendar","currentMonth","Date","selectedDate","onDateClick","day","setState","nextMonth","addMonths","prevMonth","subMonths","this","format","days","startDate","startOfWeek","addDays","monthStart","startOfMonth","monthEnd","endOfMonth","endDate","endOfWeek","formattedDate","cloneDay","isSameMonth","isSameDay","toDate","renderHeader","renderDays","renderCells","React","Component","PlannerPage","TeamMates","planners","userNames","PlannerSearch","users","setUser","setPlanner","setUserName","newUsers","forEach","element","loadUsers","target","owner","PlannerSearchPage","PrivateRoute","component","rest","render","AdminRoute","AuthExample","exact","path","HomePage","UserPage","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","document","getElementById","URL","process","origin","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.def14805.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"bigblue\":\"mystyle_bigblue__HJzxj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bigpurple\":\"mystyle_bigpurple__23tRs\"};","/*Authentication*/\r\n/**\r\n * I decide to move everything out here to clean up the environment\r\n */\r\n// import { UserContext } from \"../../utils/UserContext\";\r\nconst Auth = {\r\n\r\n    isAuthenticated: false,\r\n    isAdmin:false,\r\n    authenticate(cb) {\r\n        // req.user on backend will contain user info if\r\n        // this person has credentials that are valid\r\n        fetch('api/users/user', {\r\n            credentials: 'include'\r\n        })\r\n            .then((res) => {\r\n                console.log(`response to authenticate ${res}`);\r\n                if (res.status !== 200) {\r\n                    return false;\r\n                }\r\n                this.isAuthenticated = true\r\n                return res.json(res)\r\n            }).then(data =>{\r\n                //added this for the response code check on deployment\r\n                if(data.role === \"Admin\"){\r\n                     this.isAdmin = true;\r\n                }\r\n                console.log(this.isAdmin)\r\n                if (typeof cb === 'function') {\r\n                    console.log(`User in Auth.js ${data}`);\r\n                    cb(data);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log('Error fetching authorized user.');\r\n            });\r\n    },\r\n    signout(cb) {\r\n        fetch('api/users/logout', {\r\n            method: 'POST',\r\n            credentials: 'include'\r\n        })\r\n            .then((res) => {\r\n                this.isAuthenticated = false;\r\n                this.isAdmin = false;\r\n                if (typeof cb === 'function') {\r\n                    // user was logged out\r\n                    cb(true);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log('Error logging out user.');\r\n                if (typeof cb === 'function') {\r\n                    // user was not logged out\r\n                    cb(false);\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n}\r\nexport default Auth;","import React, { createContext, useReducer } from \"react\";\r\n\r\nconst UserContext = createContext();\r\nconst { Provider } = UserContext;\r\n\r\nfunction reducer(state, action) {\r\n    switch (action.type) {\r\n        case \"GET_USER\":\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction UserProvider({ value = {}, ...props }) {\r\n    const [state, dispatch] = useReducer(reducer, []);\r\n\r\n    return <Provider value={[state, dispatch]} {...props} />;\r\n}\r\n\r\nexport { UserProvider, UserContext };\r\n","import React, { useContext } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport Auth from \"../../utils/Auth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserContext } from \"../../utils/UserContext\";\r\n\r\n\r\nconst AuthButton = () => {\r\n\tconsole.log(\"NAV\", Auth.isAuthenticated);\r\n\r\n\tconst [user, dispatch] = useContext(UserContext);\r\n\tconst history = useHistory();\r\n\r\n\treturn (\r\n\t\tAuth.isAuthenticated ? (\r\n\t\t\t<Link className=\"nav-link\"\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tAuth.signout(() => {\r\n\t\t\t\t\t\thistory.push('/login')\r\n\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\ttype: \"GET_USER\",\r\n\t\t\t\t\t\t\tpayload: {}\r\n\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t})\r\n\t\t\t\t}}>\r\n\t\t\t\t<span id=\"red\">Logout</span>\r\n\t\t\t</Link>\r\n\t\t) : (\r\n\t\t\t\t<Link\r\n\t\t\t\t\tclassName=\"nav-link\"\r\n\t\t\t\t\tto=\"/login\"\r\n\t\t\t\t><span id=\"green\">Login</span>\r\n\t\t\t\t</Link>\r\n\t\t\t)\r\n\t)\r\n}\r\n\r\nexport default AuthButton;","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./style.css\";\r\n// import Login from \"../LoginForm\";\r\nimport AuthButton from \"../AuthButton\";\r\nimport { UserContext } from \"../../utils/UserContext\";\r\n\r\n//I want to add some basic inline styling here, even though we are bringing in styles\r\nconst buttonStyle = {\r\n  marginRight: 10\r\n};\r\n\r\nfunction Nav() {\r\n\r\n  const [user, dispatch] = useContext(UserContext);\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n\r\n  const updateWidth = () => {\r\n    if (open && width > 991) {\r\n      setOpen(false);\r\n    }\r\n    setWidth(window.innerWidth)\r\n  };\r\n\r\n\r\n\r\n  // const toggleNav = () => {\r\n  //   setOpen(!open);\r\n  // };\r\n  // console.log(user);\r\n\r\n  useEffect(() => {\r\n\r\n    window.addEventListener(\"resize\", updateWidth);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", updateWidth);\r\n    }\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark mb-2\">\r\n      <Link className=\"navbar-brand\" to=\"/\">\r\n      <span id=\"white\">The HUB </span>\r\n        </Link>\r\n      <div className={`${open ? \"\" : \"collapse \"}navbar-collapse`} id=\"navbarNav\">\r\n        {user.username ? <span id=\"username\" className=\"userText ml-3 pt-1\" to=\"#\">Hi {user.username} !</span> : \"\"}\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item \">\r\n            {!user.username ? \"\" :\r\n              <Link style={buttonStyle} className=\"nav-link\" to=\"/protected\"><span id=\"white\">DashBoard</span></Link>\r\n            }\r\n          </li>\r\n          <li className=\"nav-item \">\r\n            {!user.username ? \"\" :\r\n              <Link style={buttonStyle} className=\"nav-link\" to=\"/planner-search\"><span id=\"white\">{user.username}'s TEAM</span></Link>\r\n            }\r\n          </li>\r\n          <li className=\"nav-item \">\r\n            {!user.username ? \"\" :\r\n              <Link style={buttonStyle} className=\"nav-link\" to=\"/planner\"><span id=\"white\">Your Planner</span></Link>\r\n            }\r\n          </li>\r\n          <li className=\"nav-item \">\r\n            {user.role === \"Admin\" ? <Link style={buttonStyle} className=\"nav-link\" to=\"/admin-dash\"><span id=\"white\">Edit DashBoard</span></Link> : \"\"\r\n\r\n            }\r\n          </li>\r\n          <li className=\"nav-item \">\r\n            {user.username ? \"\" :\r\n              <Link style={buttonStyle} className=\"nav-link\" to=\"/register\"><span id=\"blue\">Register a New User</span></Link>\r\n            }\r\n            </li>\r\n            <li className=\"nav-item \">\r\n            <AuthButton />\r\n          </li>\r\n\r\n\r\n\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\n\r\nfunction Card({ icon, title, children }) {\r\n  return (\r\n    <div className=\"card mt-4\" id=\"card\">\r\n      <div className=\"card-header\">\r\n        <h3>\r\n          <strong>\r\n            <i className={`fa fa-${icon}`} aria-hidden=\"true\" /> {title}\r\n          </strong>\r\n        </h3>\r\n      </div>\r\n      <div className=\"card-body\">{children}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\n\r\n// Exporting the Container, Row, and Col components from this file\r\n\r\n// This Container component allows us to use a bootstrap container without worrying about class names\r\nexport function Container({ fluid, children }) {\r\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\n// This Row component lets us use a bootstrap row without having to think about class names\r\nexport function Row({ fluid, children }) {\r\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\n// This Col component lets us size bootstrap columns with less syntax\r\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\r\nexport function Col({ size, children }) {\r\n  return (\r\n    <div\r\n      className={size\r\n        .split(\" \")\r\n        .map(size => \"col-\" + size)\r\n        .join(\" \")}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useRef } from 'react'\r\nimport Card from \"../Card\"\r\nimport {Container} from \"../Grid\"\r\n\r\nfunction LoginForm({ onLogin }) {\r\n\r\n\tconst formRef = useRef();\r\n\tconst userNameRef = useRef();\r\n\tconst passwordRef = useRef();\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t<Card title=\"Login with your Username and Password\">\r\n\t\t\t<form\r\n\t\t\t\tref={formRef}\r\n\t\t\t\tonSubmit={(e) => {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\treturn onLogin({\r\n\t\t\t\t\t\tusername: userNameRef.current.value,\r\n\t\t\t\t\t\tpassword: passwordRef.current.value\r\n\t\t\t\t\t});\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label>Username:</label>\r\n\t\t\t\t\t<input className=\"form-control\" ref={userNameRef} type='text' name=\"username\" placeholder='Enter Username' /><br />\r\n\t\t\t\t\t<label>Password:</label>\r\n\t\t\t\t\t<input className=\"form-control\" ref={passwordRef} type='password' name=\"password\" placeholder='Password' /><br />\r\n\t\t\t\t\t<button className=\"btn btn-success\" type='submit'>\r\n\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</Card>\r\n\t\t</Container>\r\n\t)\r\n}\r\n\r\n\r\nexport default LoginForm","import React, { useEffect, useState } from 'react';\r\nimport LoginForm from \"../LoginForm\";\r\nimport Auth from \"../../utils/Auth\";\r\nimport { useLocation, useHistory } from \"react-router\";\r\nimport styles from \"./mystyle.module.css\"\r\n//Uses the Auth methods to actually login with the LoginForm Component.\r\n\r\nfunction Login() {\r\n\tlet location = useLocation();\r\n\tlet history = useHistory();\r\n\tconst [redirectToReferrer, setRedirectToReferrer] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tlet from;\r\n\t\t// console.log(location)\r\n\t\tif (!Auth.isAdmin) {\r\n\t\t\tfrom = location.state || { from: { pathname: '/protected' } }\r\n\t\t} else {\r\n\t\t\tfrom = location.state || { from: { pathname: '/admin-dash' } }\r\n\t\t}\r\n\t\t// console.log(from)\r\n\t\tif (redirectToReferrer) {\r\n\t\t\thistory.push(from.from.pathname)\r\n\t\t}\r\n\r\n\t}, [redirectToReferrer, history, location.state])\r\n\r\n\r\n    /* We need to POST to the API the users info,\r\n        This will get passed down as a prop to the LoginForm */\r\n\tconst login = (data) => {\r\n\t\tconsole.log('Logging in ' + JSON.stringify(data));\r\n\t\tfetch('api/users/login', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\tbody: JSON.stringify(data),\r\n\t\t\tcredentials: 'include',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t},\r\n\t\t})\r\n\t\t\t.then((response) => {\r\n\t\t\t\tif (response.status === 200) { //All good\r\n\t\t\t\t\tAuth.authenticate(() => { //Update the boolean and take off the cuffs\r\n\t\t\t\t\t\tsetRedirectToReferrer(true)\r\n\t\t\t\t\t\tconsole.log(`Response in login ${JSON.stringify(response)}`);\r\n\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {// No beuno, kick them\r\n\t\t\t\tconsole.log('Error logging in.', err);\r\n\t\t\t});\r\n\t}\r\n    {\r\n\treturn (\r\n\t\t<div className={styles.bigblue}>\r\n\t\t\t<LoginForm onLogin={login} />\r\n\t\t</div>\r\n\t)\r\n}\r\n}\r\nexport default Login;","// create roles for user\r\nconst Roles = {\r\n    Admin: 'Admin',\r\n    User: 'User'\r\n  }\r\n  \r\n export default  Roles;","import React, { useRef } from 'react'\r\nimport Card from \"../Card\"\r\nimport Roles from \"../../utils/roles\"\r\nimport {Container} from \"../Grid\"\r\n\r\n// class RegisterForm extends React.Component {\r\nfunction RegisterForm({ onRegister }) {\r\n\t// refs\r\n\tconst formRef = useRef();\r\n\tconst userNameRef = useRef();\r\n\tconst passwordRef = useRef();\r\n\t// const permissionsRef = useRef();\r\n\tconst managerRef = useRef();\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t<Card title=\"Register New User\">\r\n\t\t\t<form\r\n\t\t\t\tref={formRef}\r\n\t\t\t\tonSubmit={(e) => {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t// console.log(permissionsRef.current.value)\r\n\t\t\t\t\treturn onRegister({\r\n\t\t\t\t\t\tusername: userNameRef.current.value,\r\n\t\t\t\t\t\tpassword: passwordRef.current.value,\r\n\t\t\t\t\t\trole: Roles.User,\r\n\t\t\t\t\t\tmanager: managerRef.current.value\r\n\t\t\t\t\t});\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label>Username:</label>\t\r\n\t\t\t\t\t<input className=\"form-control\" ref={userNameRef} type='text' name=\"username\" placeholder='Enter Username' /><br />\r\n\t\t\t\t\t<label>Password:</label>\r\n\t\t\t\t\t<input className=\"form-control\" ref={passwordRef} type='password' name=\"password\" placeholder='Password' /><br />\r\n          <label>Manager Password:</label>\r\n\t\t\t\t\t<input className=\"form-control\" ref={managerRef} type=\"text\" name=\"manager\" placeholder=\"Your manager's password\" /><br/>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t{/* <select className=\"custom-select\" ref={permissionsRef}>\r\n\t\t\t\t\t\t<option  defaultValue >{Roles.User}</option>\r\n\t\t\t\t\t\t<option>{Roles.Admin}</option>\r\n\t\t\t\t\t</select> */}\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t<button className=\"btn btn btn-primary\" type='submit'>Submit</button>\r\n\t\t\t</form>\r\n\t\t</Card>\r\n\r\n\t\t</Container>\r\n\t\t\r\n\t)\r\n}\r\n\r\n\r\nexport default RegisterForm","import React from 'react';\r\nimport RegisterForm from \"../RegisterForm\";\r\nimport { useHistory } from \"react-router\";\r\nimport Auth from \"../../utils/Auth\";\r\nimport styles from \"./mystyle.module.css\"\r\nimport Nav from \"../Nav/index\"\r\n\r\n//The component for doing the actual signup of the User\r\n\r\nfunction Register() {\r\n\r\n\tlet history = useHistory();\r\n\r\n\tconst register = (data) => {\r\n\t\t// //create a new dash document if the user is an admin\r\n\t\t// if(data.role === \"Admin\"){\r\n\t\t// \tfetch(\"api/dash/post\", {\r\n\t\t// \t\tmethod: \"POST\",\r\n\t\t// \t\tbody: JSON.stringify(data),\r\n\t\t// \t\theaders: {\r\n\t\t// \t\t\t'Content-Type': 'application/json'\r\n\t\t// \t\t},\r\n\t\t// \t\tcredentials: 'include'\r\n\t\t// \t}).then(res => {\r\n\t\t// \t\tif(res.status === 200){\r\n\t\t// \t\t\tconsole.log(`New Dash Created For ${data.username}`)\r\n\t\t// \t\t}\r\n\t\t// \t})\r\n\t\t// };\r\n\t\tfetch(\"api/plan/post\", {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\tbody: JSON.stringify(data),\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t},\r\n\t\t\tcredentials: 'include'\r\n\t\t}).then(res => {\r\n\t\t\tconsole.log(\"Empty Plan Created\");\r\n\t\t});\r\n\t\t\r\n\t\tfetch('api/users/register', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\tbody: JSON.stringify(data),\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t},\r\n\t\t\tcredentials: 'include'\r\n\t\t})\r\n\t\t\t.then((response) => {\r\n\t\t\t\tif (response.status === 200) {\r\n\t\t\t\t\tconsole.log('Succesfully registered user!');\r\n\t\t\t\t\t//relocate to the login page\r\n\r\n\t\t\t\t\tfetch('api/users/login', {\r\n\t\t\t\t\t\tmethod: 'POST',\r\n\t\t\t\t\t\tbody: JSON.stringify(data),\r\n\t\t\t\t\t\tcredentials: 'include',\r\n\t\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t})\r\n\t\t\t\t\t\t.then((response) => {\r\n\t\t\t\t\t\t\tif (response.status === 200) { //All good\r\n\t\t\t\t\t\t\t\tAuth.authenticate(() => { //Update the boolean and take off the cuffs\r\n\t\t\t\t\t\t\t\t\t// setRedirectToReferrer(true)\r\n\t\t\t\t\t\t\t\t\t// console.log(`Response in login ${JSON.stringify(response)}`);\r\n\t\t\t\t\t\t\t\t\tif(!Auth.isAdmin){\r\n\t\t\t\t\t\t\t\t\thistory.push(\"/protected\")\r\n\t\t\t\t\t\t\t\t\t} else{\r\n\t\t\t\t\t\t\t\t\t\thistory.push(\"/admin-dash\")\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.catch((err) => {// No beuno, kick them\r\n\t\t\t\t\t\t\tconsole.log('Error logging in.', err);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log('Error registering user.', err);\r\n\t\t\t});\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={styles.bigpurple}>\r\n\t\t\t<Nav/>\r\n\t\t\t<RegisterForm onRegister={register} />\r\n\t\t</div>\r\n\t)\r\n\r\n}\r\n\r\nexport default Register","import React from 'react';\r\nimport \"./mylogin.css\";\r\nimport Card from \"../../components/Card\";\r\nimport {Container} from \"../../components/Grid\"\r\n\r\n\r\n\r\n/* This is a very simple component.. it probably doesn't need to be a smart component at this point but you never know what's goingto happen in the future */\r\n\r\nfunction PublicRoute() {\r\n\r\n    return (\r\n        <>\r\n        <div className=\"jumbotron jumbotron-fluid\">\r\n            <div className=\"container-fluid\" id=\"logindiv\" >\r\n                <h1 className=\"display-4\">Welcome to The HUB</h1>\r\n                <p className=\"lead\">A Home That Keeps You Connected.</p>\r\n            </div>\r\n        </div>\r\n       <Container>\r\n        <div className=\"about\" id=\"homeContainer\">\r\n            <div className=\"row\" id=\"homerow\">\r\n                <div className=\"col\">\r\n                  <Card title =\"About Us\">\r\n                      <p>We are your convenience in a workplace enviroment. The HUB was designed to facilitate work-flow through efficient communication. We believe Teamwork and Communication amongst peers will lead to greater results. \r\n                      Sign Up and experience success.</p>\r\n                  </Card>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n        </Container>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default PublicRoute","import axios from \"axios\";\r\n\r\nexport default {\r\n  // Gets all Announcements\r\n  getAnnouncements: function() {\r\n    return axios.get(\"/api/dash/get\");\r\n  },\r\n  // Post new Announcements\r\n  addAnnouncement: function(){\r\n      return axios.post(\"/api/dash/post\");\r\n  },\r\n  // Deletes the Announcements with the given id\r\n  deleteAnnouncement: function(data) {\r\n    return axios.post(\"/api/dash/remove\",data)\r\n    .then(res=> console.log(res)).catch(err =>console.log(err));\r\n  },\r\n  // Update an Announcement with given id\r\n  updateAnnouncement: function(data) {\r\n    return axios.post(\"/api/dash/add\", data)\r\n    .then(res => console.log(res)).catch(err => console.log(err));\r\n  },\r\n  /////////////////////////////////////////////////////////////\r\n  //below contains requests for planner\r\n\r\n  getPlan: function (){\r\n    return axios.get(\"/api/plan/get\");\r\n  },\r\n\r\n\r\n  addPlan: function (data) {\r\n    return axios.post(\"api/plan/post\",data)\r\n    \r\n  },\r\n  updatePlan: function (data) {\r\n    return axios.post(\"api/plan/update\",data)\r\n  },\r\n\r\n   /////////////////////////////////////////////////////////////\r\n  //below contains requests for plannerSearch\r\n\r\n  getUser: function (data){\r\n    return axios.get(\"api/search/team\",data)\r\n  },\r\n\r\n  getUserzPlanner: function (user){\r\n    return axios.get(\"api/search/\"+user)\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n//   // Gets the Announcement with the given id\r\n//   getAnnouncement: function() {\r\n//     return axios.get(\"/api/dashboard/\" + id);\r\n//   },","import React from 'react'\r\nimport API from \"../../utils/API\"\r\nimport Auth from \"../../utils/Auth\"\r\nimport \"./style.css\"\r\n\r\n\r\nfunction Announcements({title,body,type,loadAnnouncements}) {\r\n\r\n    const handleSubmit = (e)=> {\r\n        e.preventDefault();\r\n        \r\n        API.deleteAnnouncement({\r\n            title: title\r\n          \r\n        })\r\n        loadAnnouncements();\r\n    }\r\n\r\n    return (\r\n        <div className=\"card\" id=\"announcement\">\r\n            <div className=\"card-body\"\r\n          >\r\n                <h3 className=\"card-title\">{title}</h3>\r\n                <h5>{type}</h5>\r\n                <p className=\"card-text\">{body}</p>\r\n                {Auth.isAdmin ? <button onClick={handleSubmit} type= \"submit\" className=\"btn float-right\">Delete</button> : \"\"}\r\n            \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Announcements","import React, { useEffect, useState } from \"react\";\r\nimport Announcements from \"../Announcement\"\r\nimport API from \"../../utils/API\"\r\nimport { Row, Col } from \"../Grid\"\r\nimport \"./style.css\"\r\nfunction UserDashBoard (){\r\n\r\n    const [announcements, setAnnouncements] = useState([])\r\n\r\n    //load all announcements\r\n    useEffect(()=> {\r\n        loadAnnouncements()\r\n    },[])\r\n    \r\n    function loadAnnouncements (){\r\n        \r\n        API.getAnnouncements()\r\n        .then(res =>{\r\n            // console.log(res)\r\n            setAnnouncements(res.data.items)\r\n            // console.log(\"userdash\" , res.data)\r\n        }\r\n            )\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n     //filter to split Long and Short Term Announcements\r\n     let filterShortAn = announcements.filter(\r\n        (shortAnnouncements) => {\r\n            return shortAnnouncements.type ===\"Short-Term\";\r\n        }\r\n    );\r\n    let filterLongAn = announcements.filter(\r\n        (longAnnouncements) => {\r\n            return longAnnouncements.type ===\"Long-Term\";\r\n        }\r\n    );\r\n   \r\n\r\n    return(\r\n        <div className=\"user\" id=\"dashBoard\">\r\n        <Row>\r\n            <Col size=\"sm-6\">\r\n            <h1>Short-Term</h1>\r\n                <div id=\"shortTerm\">\r\n                    {announcements.length=== 0 ? \"\" : filterShortAn.map((announcement, i) => {\r\n                        return (\r\n\r\n                            <Announcements key={i} title={announcement.title} type={announcement.type} body={announcement.body} loadAnnouncements={loadAnnouncements} />\r\n                        )\r\n                    })}\r\n                </div>\r\n            </Col>\r\n\r\n            <Col size=\"sm-6\">\r\n            <h1>Long-Term</h1>\r\n                <div id=\"longTerm\">\r\n                    {announcements.length=== 0 ? \"\" : filterLongAn.map((announcement,i) => {\r\n                        return (\r\n                            <Announcements key={i} title={announcement.title} type={announcement.type} body={announcement.body} loadAnnouncements={loadAnnouncements} />\r\n                        )\r\n                    })}\r\n                </div>\r\n\r\n            </Col>\r\n        </Row>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserDashBoard","import React, { useEffect, useContext } from 'react'\r\nimport Card from \"../../components/Card\"\r\nimport { UserContext } from \"../../utils/UserContext\";\r\nimport UserDashBoard from '../../components/UserDashBoard';\r\n\r\n/* This is a very simple component.. it probably doesn't need to be a smart component at this point but you never know what's goingto happen in the future */\r\n\r\nfunction ProtectedRoute() {\r\n\r\n\tconst [user, dispatch] = useContext(UserContext)\r\n\tconsole.log(user)\r\n\r\n\tuseEffect(() => {\r\n\t\tfetch('api/users/user', {\r\n\t\t\tcredentials: 'include'\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(`response to authenticate ${res}`);\r\n\t\t\t\treturn res.json(res)\r\n\r\n\t\t\t})\r\n\t\t\t.then(data => {\r\n\t\t\t\tconsole.log(data);\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: \"GET_USER\",\r\n\t\t\t\t\tpayload: data\r\n\t\t\t\t})\r\n\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log('Error fetching authorized user.');\r\n\t\t\t});\r\n\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<UserDashBoard/>\r\n\t\t</div>\r\n\t)\r\n\r\n}\r\n\r\nexport default ProtectedRoute","import React from \"react\";\r\n\r\nfunction FormButton (){\r\n    return(\r\n        <button className=\"btn\" type=\"submit\" >Submit</button>\r\n    )\r\n}\r\n\r\nexport default FormButton","import React, {useRef} from \"react\";\r\nimport API from \"../../utils/API\";\r\nimport FormButton from \"../FormSubmitButton\";\r\nimport Card from \"../Card\";\r\n\r\n\r\nfunction AdminDashBoardForm({loadAnnouncements}) {\r\n\r\n\r\n    const dashFormRef = useRef();\r\n    const titleRef = useRef();\r\n    const typeRef = useRef();\r\n    const bodyRef = useRef();\r\n\r\n    const handleSubmit = (e)=> {\r\n        e.preventDefault();\r\n        API.updateAnnouncement({\r\n            title: titleRef.current.value,\r\n            type: typeRef.current.value,\r\n            body: bodyRef.current.value\r\n        })\r\n        loadAnnouncements();\r\n    }\r\n   \r\n    \r\n    return (\r\n        <Card title=\"Set a Goal for Your Team\">\r\n        <form\r\n            ref={dashFormRef}\r\n            onSubmit={handleSubmit}\r\n            \r\n        >\r\n            <div className=\"form-group\">\r\n                <label for=\"exampleFormControlInput1\">Title</label>\r\n                <input ref={titleRef} type=\"text\" className=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"Title\" />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label for=\"exampleFormControlSelect1\">Example select</label>\r\n                <select ref={typeRef} className=\"form-control\" id=\"exampleFormControlSelect1\">\r\n                    <option>Short-Term</option>\r\n                    <option>Long-Term</option>\r\n                </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label for=\"exampleFormControlTextarea1\">Example textarea</label>\r\n                <textarea ref={bodyRef} className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\"></textarea>\r\n            </div>\r\n            <FormButton />\r\n        </form>\r\n        </Card>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default AdminDashBoardForm","import React, { useEffect, useState } from \"react\";\r\nimport Announcements from \"../Announcement\"\r\nimport API from \"../../utils/API\"\r\nimport AdminDashBoardForm from \"../AdminDashBoardForm\"\r\nimport {  Row, Col } from \"../Grid\"\r\nimport \"./style.css\"\r\nfunction AdminDashBoard() {\r\n\r\n    const [announcements, setAnnouncements] = useState([])\r\n\r\n    //load all announcements\r\n    useEffect(() => {\r\n        loadAnnouncements()\r\n    }, [])\r\n\r\n    function loadAnnouncements() {\r\n\r\n        API.getAnnouncements()\r\n            .then(res => {\r\n                // console.log(res)\r\n                setAnnouncements(res.data.items)\r\n                // console.log(\"userdash\", res.data)\r\n            }\r\n            )\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n    //filter to split Long and Short Term Announcements\r\n    let filterShortAn = announcements.filter(\r\n        (shortAnnouncements) => {\r\n            return shortAnnouncements.type ===\"Short-Term\";\r\n        }\r\n    );\r\n    let filterLongAn = announcements.filter(\r\n        (longAnnouncements) => {\r\n            return longAnnouncements.type ===\"Long-Term\";\r\n        }\r\n    );\r\n    // console.log(filterShortAn);\r\n    // console.log(filterLongAn);\r\n\r\n    return (\r\n        <div className=\"admin\" id=\"dashBoard\">\r\n            <Row>\r\n                <Col size=\"sm-6\">\r\n                    <h1>Short-Term</h1>\r\n                    <div id=\"shortTerm\">\r\n                        {announcements.length=== 0 ? \"\" : filterShortAn.map((announcement, i) => {\r\n                            return (\r\n\r\n                                <Announcements key={i} title={announcement.title} type={announcement.type} body={announcement.body} loadAnnouncements={loadAnnouncements} />\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </Col>\r\n\r\n                <Col size=\"sm-6\">\r\n                <h1>Long-Term</h1>\r\n                    <div id=\"longTerm\">\r\n                        {announcements.length=== 0 ? \"\" : filterLongAn.map((announcement,i) => {\r\n                            return (\r\n                                <Announcements key={i} title={announcement.title} type={announcement.type} body={announcement.body} loadAnnouncements={loadAnnouncements} />\r\n                            )\r\n                        })}\r\n                    </div>\r\n\r\n                </Col>\r\n            </Row>\r\n            <hr />\r\n            <Row>\r\n                <Col size=\"sm-4\">\r\n                    \r\n                    <AdminDashBoardForm loadAnnouncements={loadAnnouncements} />\r\n                    \r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdminDashBoard","import React, { useEffect, useContext } from 'react'\r\nimport { UserContext } from \"../../utils/UserContext\";\r\nimport AdminDashBoard from \"../../components/AdminDashBoard\";\r\n\r\nfunction AdminPage() {\r\n    const [user, dispatch] = useContext(UserContext)\r\n\t// console.log(user)\r\n\r\n\tuseEffect(() => {\r\n\t\tfetch('api/users/user', {\r\n\t\t\tcredentials: 'include'\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\t// console.log(`response to authenticate ${res}`);\r\n\t\t\t\treturn res.json(res)\r\n\r\n\t\t\t})\r\n\t\t\t.then(data => {\r\n\t\t\t\tconsole.log(data);\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: \"GET_USER\",\r\n\t\t\t\t\tpayload: data\r\n\t\t\t\t})\r\n\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log('Error fetching authorized user.');\r\n\t\t\t});\r\n\r\n\t}, []);\r\n    return (\r\n\r\n\r\n        <div className=\"container-fluid\">\r\n            <AdminDashBoard />\r\n            <hr />\r\n           \r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default AdminPage;","import React,{useRef} from \"react\"\r\nimport FormButton from \"../FormSubmitButton\"\r\nimport { Container } from \"../Grid\"\r\nimport Card from \"../Card\"\r\nimport \"./style.css\"\r\nimport API from \"../../utils/API\"\r\n\r\n\r\nfunction PlannerForm({loadPlans,update}) {\r\n    \r\n    const planFormRef= useRef();\r\n    const dayRef= useRef();\r\n    const timeRef= useRef();\r\n    const planRef= useRef();\r\n\r\n    const handleSubmit=(e) =>{\r\n        e.preventDefault();\r\n        // console.log(update)\r\n        // console.log(parseInt(timeRef.current.value))\r\n        const updatedplan = update[parseInt(timeRef.current.value)]\r\n        updatedplan.splice(dayRef.current.value, 1,planRef.current.value)\r\n        const sendPlans= update\r\n        sendPlans.splice(timeRef.current.value, 1 , updatedplan)\r\n        // console.log(sendPlans)\r\n        API.updatePlan(sendPlans)\r\n        .then (res=> console.log(res))\r\n        //.then (postPlan(res))\r\n        .catch(err=>console.log(err))\r\n        loadPlans();\r\n        planRef.current.value = \"\";\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <Card title=\"Place Your Plan\" id=\"plannerForm\">\r\n            <form \r\n            ref={planFormRef}\r\n            onSubmit={handleSubmit}\r\n            >\r\n                <div className=\"form-group\">\r\n                    <label for=\"exampleFormControlSelect1\">Day:</label>\r\n                    <select ref={dayRef} className=\"form-control\" id=\"exampleFormControlSelect1\">\r\n                        <option value=\"0\">Monday</option>\r\n                        <option value=\"1\">Tuesday</option>\r\n                        <option value=\"2\">Wednesday</option>\r\n                        <option value=\"3\">Thursday</option>\r\n                        <option value=\"4\">Friday</option>\r\n                        <option value=\"5\">Saturday</option>\r\n                        <option value=\"6\">Sunday</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label for=\"exampleFormControlSelect1\">Time:</label>\r\n                    <select ref={timeRef} className=\"form-control\" id=\"exampleFormControlSelect1\">\r\n                        <option value=\"0\">0800</option>\r\n                        <option value=\"1\">0900</option>\r\n                        <option value=\"2\">1000</option>\r\n                        <option value=\"3\">1100</option>\r\n                        <option value=\"4\">1200</option>\r\n                        <option value=\"5\">1300</option>\r\n                        <option value=\"6\">1400</option>\r\n                        <option value=\"7\">1500</option>\r\n                        <option value=\"8\">1600</option>\r\n                        <option value=\"9\">1700</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label for=\"exampleFormControlTextarea1\">Example textarea</label>\r\n                    <textarea ref={planRef} className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\"></textarea>\r\n                </div>\r\n                <FormButton />\r\n            </form>\r\n            </Card>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default PlannerForm","import React from \"react\"\r\n\r\nfunction ClearAllButton (props){\r\n\r\n    return (\r\n        <button className=\"btn\" {...props} role= \"button\"> Clear All </button>\r\n    )\r\n}\r\n\r\nexport default ClearAllButton","import React, {useEffect, useState} from \"react\";\r\nimport PlannerForm from \"../PlannerForm\"\r\nimport API from \"../../utils/API\"\r\nimport ClearAllButton from \"../ClearAllButton\"\r\n\r\nfunction Planner() {\r\n    const [plans, setPlan] = useState(\"\")\r\n    \r\n    // load all plans\r\n    useEffect(() => {\r\n        loadPlans();\r\n    },[])\r\n\r\n    function loadPlans() {\r\n\r\n        API.getPlan()\r\n            .then(res => {\r\n                setPlan(res.data[0].schedule);\r\n                // console.log(\"userplan\", res.data);\r\n            }\r\n            ).then(() => {\r\n                // console.log(\"the schedule\", plans);\r\n            })\r\n            .catch(err => console.log(err));\r\n    };\r\n \r\n    function clearAll() {\r\n        API.updatePlan([\r\n            [\"\", \"\", \"\", \"\", \"\", \"\", \"\"],\r\n            [\"\", \"\", \"\", \"\", \"\", \"\", \"\"],\r\n            [\"\", \"\", \"\", \"\", \"\", \"\", \"\"],\r\n            [\"\", \"\", \"\", \"\", \"\", \"\", \"\"],\r\n            [\"\", \"\", \"\", \"\", \"\", \"\", \"\"],\r\n            [\"\", \"\", \"\", \"\", \"\", \"\", \"\"],\r\n            [\"\", \"\", \"\", \"\", \"\", \"\", \"\"],\r\n            [\"\", \"\", \"\", \"\", \"\", \"\", \"\"],\r\n            [\"\", \"\", \"\", \"\", \"\", \"\", \"\"],\r\n            [\"\", \"\", \"\", \"\", \"\", \"\", \"\"]\r\n        ])\r\n        .then(()=>{\r\n            console.log(\"Schedule Deleted\")\r\n        })\r\n        .catch(err=> console.log(err));\r\n        loadPlans();\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n        \r\n            <table className=\"table table-striped table-dark\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">Hours</th>\r\n                        <th scope=\"col\">Monday</th>\r\n                        <th scope=\"col\">Tuesday</th>\r\n                        <th scope=\"col\">Wednesday</th>\r\n                        <th scope=\"col\">Thursday</th>\r\n                        <th scope=\"col\">Friday</th>\r\n                        <th scope=\"col\">Saturday</th>\r\n                        <th scope=\"col\">Sunday</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <th scope=\"row\">0800</th>\r\n                        {!plans ? \"\" :plans[0].map((plan, i) => {\r\n                            return (\r\n                                <td key={i} >{plan}</td>\r\n                            )\r\n                        })}\r\n\r\n                    </tr>\r\n                    <tr>\r\n                        <th scope=\"row\">0900</th>\r\n                        {!plans ? \"\" :plans[1].map((plan, i) => {\r\n                            return (\r\n                                <td key={i} >{plan}</td>\r\n                            )\r\n                        })}\r\n                    </tr>\r\n                    <tr>\r\n                        <th scope=\"row\">1000</th>\r\n                        {!plans ? \"\" :plans[2].map((plan, i) => {\r\n                            return (\r\n                                <td key={i} >{plan}</td>\r\n                            )\r\n                        })}\r\n                    </tr>\r\n                    <tr>\r\n                        <th scope=\"row\">1100</th>\r\n                        {!plans ? \"\" :plans[3].map((plan, i) => {\r\n                            return (\r\n                                <td key={i} >{plan}</td>\r\n                            )\r\n                        })}\r\n                    </tr>\r\n                    <tr>\r\n                        <th scope=\"row\">1200</th>\r\n                        {!plans ? \"\" :plans[4].map((plan, i) => {\r\n                            return (\r\n                                <td key={i} >{plan}</td>\r\n                            )\r\n                        })}\r\n                    </tr>\r\n                    <tr>\r\n                        <th scope=\"row\">1300</th>\r\n                        {!plans ? \"\" :plans[5].map((plan, i) => {\r\n                            return (\r\n                                <td key={i} >{plan}</td>\r\n                            )\r\n                        })}\r\n                    </tr>\r\n                    <tr>\r\n                        <th scope=\"row\">1400</th>\r\n                        {!plans ? \"\" :plans[6].map((plan, i) => {\r\n                            return (\r\n                                <td key={i} >{plan}</td>\r\n                            )\r\n                        })}\r\n                    </tr>\r\n                    <tr>\r\n                        <th scope=\"row\">1500</th>\r\n                        {!plans ? \"\" :plans[7].map((plan, i) => {\r\n                            return (\r\n                                <td key={i} >{plan}</td>\r\n                            )\r\n                        })}\r\n                    </tr>\r\n                    <tr>\r\n                        <th scope=\"row\">1600</th>\r\n                        {!plans ? \"\" :plans[8].map((plan, i) => {\r\n                            return (\r\n                                <td key={i} >{plan}</td>\r\n                            )\r\n                        })}\r\n                    </tr>\r\n                    <tr>\r\n                        <th scope=\"row\">1700</th>\r\n                        {!plans ? \"\" :plans[9].map((plan, i) => {\r\n                            return (\r\n                                <td key={i} >{plan}</td>\r\n                            )\r\n                        })}\r\n                    </tr>\r\n                  \r\n                </tbody>\r\n                \r\n            </table>\r\n            <ClearAllButton onClick={()=> clearAll()}/>\r\n            \r\n            <PlannerForm loadPlans={loadPlans} update={plans}/>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Planner","import React from 'react'\r\nimport addMonths from 'date-fns/addMonths';\r\n import subMonths from 'date-fns/subMonths';\r\n import addDays from 'date-fns/addDays';\r\n import startOfWeek from 'date-fns/startOfWeek';\r\n import endOfWeek from 'date-fns/endOfWeek';\r\n import startOfMonth from 'date-fns/startOfMonth';\r\n import endOfMonth from 'date-fns/endOfMonth';\r\n import isSameMonth from 'date-fns/isSameMonth';\r\n import isSameDay from 'date-fns/isSameDay';\r\n import format from 'date-fns/format'\r\n import parse from 'date-fns/parse'\r\n import toDate from 'date-fns/toDate'\r\n\r\n\r\n class Calendar extends React.Component {\r\n     state = {\r\n         currentMonth: new Date(),\r\n         selectedDate: new Date()\r\n     };\r\n\r\n     renderHeader() {\r\n         const dateFormat = \"MMMM yyyy\";\r\n         return (\r\n             <div className=\"header row flex-middle\">\r\n                 <div className=\"col col-start\">\r\n                     <div className=\"icon\" onClick={this.prevMonth}>\r\n                         chevron_left\r\n               </div>\r\n                 </div>\r\n                 <div className=\"col col-center\">\r\n                     <span>\r\n                         {format(this.state.currentMonth, dateFormat)}\r\n                     </span>\r\n                 </div>\r\n                 <div className=\"col col-end\" onClick={this.nextMonth}>\r\n                     <div className=\"icon\">chevron_right</div>\r\n                 </div>\r\n             </div>\r\n         );\r\n     }\r\n     renderDays() {\r\n         const dateFormat = \"dddd\";\r\n         const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n         let startDate = startOfWeek(this.state.currentMonth);\r\n         for (let i = 0; days.length < 7; i++) {\r\n             days.push(\r\n                 <div className=\"col col-center\" key={i}>\r\n                     {format(addDays(startDate, i), dateFormat)}\r\n                 </div>\r\n             );\r\n         }\r\n         return <div className=\"days row\">\r\n             <div className= 'col cell'>\r\n                 {days[0]}\r\n             </div>\r\n             <div className= 'col cell'>\r\n                 {days[1]}\r\n             </div> \r\n             <div className= 'col cell'>\r\n                 {days[2]}\r\n             </div>\r\n             <div className= 'col cell'>\r\n                 {days[3]}\r\n             </div>\r\n             <div className= 'col cell'>\r\n                 {days[4]}\r\n             </div>\r\n             <div className= 'col cell'>\r\n                 {days[5]}\r\n             </div>\r\n             <div className= 'col cell'>\r\n                 {days[6]}\r\n             </div>\r\n             </div>;\r\n     }\r\n     renderCells() {\r\n         const { currentMonth, selectedDate } = this.state;\r\n         const monthStart = startOfMonth(currentMonth);\r\n         const monthEnd = endOfMonth(monthStart);\r\n         const startDate = startOfWeek(monthStart);\r\n         const endDate = endOfWeek(monthEnd);\r\n         const dateFormat = \"d\";\r\n         const rows = [];\r\n         let days = [];\r\n         let day = startDate;\r\n         let formattedDate = \"\";\r\n         while (day <= endDate) {\r\n             for (let i = 0; i < 7; i++) {\r\n                 formattedDate = format(day, dateFormat);\r\n                 const cloneDay = day;\r\n                 days.push(\r\n                     <div\r\n                         className={`col cell ${\r\n                             !isSameMonth(day, monthStart)\r\n                                 ? \"disabled\"\r\n                                 : isSameDay(day, selectedDate) ? \"selected\" : \"\"\r\n                             }`}\r\n                         key={day}\r\n                         onClick={() => this.onDateClick(toDate(cloneDay))}\r\n                     >\r\n                         <span className=\"number\">{formattedDate}</span>\r\n\r\n                     </div>\r\n                 );\r\n                 day = addDays(day, 1);\r\n             }\r\n             rows.push(\r\n                 <div className=\"row\" key={day}>\r\n                     {days}\r\n                 </div>\r\n             );\r\n             days = [];\r\n         }\r\n         return <div className=\"body\">{rows}</div>;\r\n     }\r\n     onDateClick = day => {\r\n         this.setState({\r\n           selectedDate: day\r\n         });\r\n       };\r\n     nextMonth = () => {\r\n         this.setState({\r\n             currentMonth: addMonths(this.state.currentMonth, 1)\r\n         });\r\n     };\r\n     prevMonth = () => {\r\n         this.setState({\r\n             currentMonth: subMonths(this.state.currentMonth, 1)\r\n         });\r\n     };\r\n     render() {\r\n         return (\r\n             <div className=\"calender\">\r\n                 {this.renderHeader()}\r\n                 {this.renderDays()}\r\n                 {this.renderCells()}\r\n             </div>\r\n         );\r\n     }\r\n }\r\n\r\n export default Calendar;","import React from 'react'\r\nimport Planner from '../../components/Planner/index.js'\r\nimport './style.css'\r\nimport {Container,Row,Col} from \"../../components/Grid\"\r\nimport Calendar from '../../components/Calendar'\r\nfunction PlannerPage () {\r\n        \r\n        return (\r\n          <Container fluid>\r\n          \r\n            <header>\r\n              <div id=\"logo\">\r\n                <span className=\"icon\">date_range</span>\r\n                <span>\r\n                  HUB<b>planner</b>\r\n                </span>\r\n              </div>\r\n            </header>\r\n            <hr/>\r\n            <Calendar/>\r\n             <hr/>\r\n            <Row>\r\n              <Col size=\"sm-12\">\r\n              <Planner/>\r\n              </Col>\r\n            </Row>\r\n          \r\n          </Container>\r\n        );\r\n      }\r\n\r\n\r\nexport default PlannerPage;","import React from \"react\";\r\n\r\n\r\n\r\nfunction TeamMates ({planners,userNames}){\r\n   \r\n    return(\r\n        <>\r\n        \r\n        <table className=\"table table-striped table-dark\">\r\n         <thead>\r\n                    <tr><th > \r\n                            {!userNames ? \"\" :   <span className=\"userNames\"> {userNames} </span>}\r\n                         \r\n                 \r\n                  </th></tr>\r\n                <tr> \r\n                    <th scope=\"col\">Hours</th>\r\n                    <th scope=\"col\">Monday</th>\r\n                    <th scope=\"col\">Tuesday</th>\r\n                    <th scope=\"col\">Wednesday</th>\r\n                    <th scope=\"col\">Thursday</th>\r\n                    <th scope=\"col\">Friday</th>\r\n                    <th scope=\"col\">Saturday</th>\r\n                    <th scope=\"col\">Sunday</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    <th scope=\"row\">0800</th>\r\n                    {!planners ? \"\" :planners[0].map((plan, i) => {\r\n                        return (\r\n                            <td key={i} >{plan}</td>\r\n                        )\r\n                    })}\r\n\r\n                </tr>\r\n                <tr>\r\n                    <th scope=\"row\">0900</th>\r\n                    {!planners ? \"\" :planners[1].map((plan, i) => {\r\n                        return (\r\n                            <td key={i} >{plan}</td>\r\n                        )\r\n                    })}\r\n                </tr>\r\n                <tr>\r\n                    <th scope=\"row\">1000</th>\r\n                    {!planners ? \"\" :planners[2].map((plan, i) => {\r\n                        return (\r\n                            <td key={i} >{plan}</td>\r\n                        )\r\n                    })}\r\n                </tr>\r\n                <tr>\r\n                    <th scope=\"row\">1100</th>\r\n                    {!planners ? \"\" :planners[3].map((plan, i) => {\r\n                        return (\r\n                            <td key={i} >{plan}</td>\r\n                        )\r\n                    })}\r\n                </tr>\r\n                <tr>\r\n                    <th scope=\"row\">1200</th>\r\n                    {!planners ? \"\" :planners[4].map((plan, i) => {\r\n                        return (\r\n                            <td key={i} >{plan}</td>\r\n                        )\r\n                    })}\r\n                </tr>\r\n                <tr>\r\n                    <th scope=\"row\">1300</th>\r\n                    {!planners ? \"\" :planners[5].map((plan, i) => {\r\n                        return (\r\n                            <td key={i} >{plan}</td>\r\n                        )\r\n                    })}\r\n                </tr>\r\n                <tr>\r\n                    <th scope=\"row\">1400</th>\r\n                    {!planners ? \"\" :planners[6].map((plan, i) => {\r\n                        return (\r\n                            <td key={i} >{plan}</td>\r\n                        )\r\n                    })}\r\n                </tr>\r\n                <tr>\r\n                    <th scope=\"row\">1500</th>\r\n                    {!planners ? \"\" :planners[7].map((plan, i) => {\r\n                        return (\r\n                            <td key={i} >{plan}</td>\r\n                        )\r\n                    })}\r\n                </tr>\r\n                <tr>\r\n                    <th scope=\"row\">1600</th>\r\n                    {!planners ? \"\" :planners[8].map((plan, i) => {\r\n                        return (\r\n                            <td key={i} >{plan}</td>\r\n                        )\r\n                    })}\r\n                </tr>\r\n                <tr>\r\n                    <th scope=\"row\">1700</th>\r\n                    {!planners ? \"\" :planners[9].map((plan, i) => {\r\n                        return (\r\n                            <td key={i} >{plan}</td>\r\n                        )\r\n                    })}\r\n                </tr>\r\n              \r\n            </tbody>\r\n            \r\n        </table>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default TeamMates","import React, { useEffect, useState } from \"react\";\r\nimport { Container } from \"../Grid\"\r\nimport Card from \"../Card\"\r\nimport TeamMates from \"../TeamMates\"\r\nimport API from \"../../utils/API\"\r\n\r\n\r\n\r\nfunction PlannerSearch() {\r\n\r\n    const [users, setUser] = useState(\"\")\r\n    const [planners, setPlanner] =useState(\"\")\r\n    const [userNames, setUserName] =useState(\"\")\r\n  \r\n\r\n    useEffect(() => {\r\n        loadUsers();\r\n    }, [])\r\n\r\n    function loadUsers() {\r\n        const newUsers =[]\r\n        \r\n        API.getUser()\r\n            .then(res => {\r\n          \r\n                // console.log(\"user\", res.data);\r\n                res.data.forEach(element => {\r\n                    return newUsers.push(element.username);\r\n                    \r\n                });\r\n            }\r\n            ).then(() => {\r\n                setUser(newUsers);\r\n                // console.log(\"the user\", newUsers);\r\n            })\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n  \r\n    \r\n  \r\n    function handleClick (e){\r\n        e.preventDefault();\r\n        // console.log(e.target,\"it clicks\")\r\n    API.getUserzPlanner(e.target.value )\r\n    .then(res => {\r\n        setPlanner(res.data.schedule);\r\n        setUserName(res.data.owner);\r\n        console.log(\"userzplan\", res.data.owner);\r\n    }\r\n    ).then(() => {\r\n         console.log(\"the selected schedule\", planners);\r\n    })\r\n    .catch(err => console.log(err));\r\n };\r\n\r\n \r\n\r\n\r\n    return (\r\n\r\n        <Container>\r\n            <TeamMates planners={planners} userNames={userNames}/>\r\n            <Card title=\"Find Your TeamMate's Planner\">\r\n                <form>\r\n                    <div className=\"form-group\">\r\n                        <label for=\"exampleFormControlSelect1\">Example select</label>\r\n                        <select className=\"form-control\" id=\"exampleFormControlSelect1\" onClick={handleClick}>\r\n                            {!users ? \"\" : users.map((user, i) => {\r\n                                return (\r\n                                    <option value={user} key={i} >{user}</option>\r\n                                )\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                </form>\r\n            </Card>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default PlannerSearch","import React from \"react\"\r\nimport {Container,Row,Col} from \"../../components/Grid\"\r\nimport PlannerSearch from \"../../components/PlannerSearch\"\r\n\r\nfunction PlannerSearchPage (){\r\n\r\n    return(\r\n        <Container>\r\n        \r\n        <PlannerSearch/>\r\n\r\n        </Container>\r\n\r\n    )\r\n}\r\n\r\nexport default PlannerSearchPage","import React from 'react'\r\nimport {\r\n\tBrowserRouter as Router,\r\n\tRoute,\r\n\tRedirect,\r\n\tSwitch\r\n} from 'react-router-dom';\r\nimport Auth from \"./utils/Auth\";\r\nimport Nav from \"./components/Nav\";\r\nimport Login from \"./components/Login\";\r\nimport Register from \"./components/Register\";\r\nimport HomePage from \"./pages/HomePage\";\r\nimport UserPage from \"./pages/UserPage\";\r\nimport AdminPage from \"./pages/AdminPage\";\r\nimport PlannerPage from \"./pages/PlannerPage\";\r\nimport PlannerSearchPage from \"./pages/PlannerSearchPage\";\r\nimport './App.css';\r\nimport { UserProvider } from \"./utils/UserContext\";\r\n\r\n//Now we have all the stuff we need .. let's render some components with the Router\r\nconst AuthExample = () => (\r\n\t<UserProvider>\r\n\t\t<Router>\r\n\t\t\t<div>\r\n\t\t\t\t<Nav className=\"App-header\" />\r\n\t\t\t\t\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route exact path=\"/\" component={HomePage} />\r\n\t\t\t\t\t\t<Route exact path=\"/login\" component={Login} />\r\n\t\t\t\t\t\t<Route exact path=\"/register\" component={Register} />\r\n\t\t\t\t\t\t<PrivateRoute exact path=\"/protected\" component={UserPage} />\r\n\t\t\t\t\t\t<PrivateRoute exact path=\"/planner\" component={PlannerPage} />\r\n\t\t\t\t\t\t<PrivateRoute exact path=\"/planner-search\" component={PlannerSearchPage} />\r\n\t\t\t\t\t\t<AdminRoute exact path =\"/admin-dash\" component={AdminPage} />\r\n\t\t\t\t\t\t{/* <Route component={NoMatch} /> */}\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t</Router>\r\n\t</UserProvider>\r\n)\r\n\r\n\r\n\r\n\r\n// This is the private route component this checks for an authorized user here\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n\t<Router>\r\n\t\t<div>\r\n\r\n\t\t\t<Route {...rest} render={props => (\r\n\r\n\t\t\t\tAuth.isAuthenticated ? (\r\n\t\t\t\t\t<Component {...props} />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t\t\t<div className=\"alert alert-danger text-center\" role=\"alert\">\r\n\t\t\t\t\t\t\t\tThis page is private to authenticated users.\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t<div className=\"col-sm\"></div>\r\n\t\t\t\t\t\t\t\t<div className=\"col-sm\">\r\n\t\t\t\t\t\t\t\t\t<h3>Please Register or Login</h3>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"col-sm\"></div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<Redirect to={{\r\n\t\t\t\t\t\t\t\tpathname: '/login',\r\n\t\t\t\t\t\t\t\tstate: { from: props.location }\r\n\t\t\t\t\t\t\t}} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t)} />\r\n\t\t</div>\r\n\t</Router>\r\n)\r\nconst AdminRoute = ({ component: Component, ...rest }) => (\r\n\t<Router>\r\n\t\t<div>\r\n\r\n\t\t\t<Route {...rest} render={props => (\r\n\t\t\t\t\r\n\t\t\t\tAuth.isAuthenticated && Auth.isAdmin ? (\r\n\t\t\t\t\t<Component {...props} />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t\t\t<div className=\"alert alert-danger text-center\" role=\"alert\">\r\n\t\t\t\t\t\t\t\tThis page is private to admins.\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t)} />\r\n\t\t</div>\r\n\t</Router>\r\n)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default AuthExample\r\n\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport registerServiceWorker from './registerServiceWorker';\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}